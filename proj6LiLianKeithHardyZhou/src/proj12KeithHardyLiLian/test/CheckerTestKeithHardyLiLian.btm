class Main extends B{
    boolean a = true;
    //illigeal type declaration 
    int b = true;

    //use of undeclared type
    //incompatible type declaration
    ood c = null;

    //variable defined twice as fields
    boolean b = false;

    B testB = new B();

    void bar(int a){
	//improper number of arguments for method call
    	testB.foo(true);

        a = a + 1;
    }
    // method name duplication
    void bar(int y, int z) {
        //use of improper types of data for operations
        y = y + true;
        //use of undefined variable
        stephanie = 1;
	//cannot assign variable of type int to type Object
	//z is already declared in this scope
        var z = this.foo();
        z = z * y;
	//illigal delaration statement
        var q = (new int[4]);
	//missing declaraiton of i
        for(i = 0; i < 2; i++){
            z = z + i;
            y = z + i;
        }
	//x has not be declared
	//z is not comparable to int
        while(z < 5 || x > 6){
	   //use of undefied method in dispatch statement
	   //incorrect number of argumets passed in method bar and foo
           foo(z).get(x).ban().bar();
	   //increment on undefined variable 
           this.counter ++;
           break;
        }
	//undeclared x variable 
        if(x == 3){
            z = z / 2;
        }else{
            y = y / 2;
        }
    }
    //method overloading
    int foo(){
	//undefined variable d
	//incorrect number of arguments in function foo
	//undeclared method fooo
        foo(d).fooo(x);
        return 6;
    }

    int dale(){
	//wrong type of return statement
        return true;
    }
}

class B{
    int[] a;
    int b;
    void B(){
	a = new int[3];
	//illigal declaration of undefined variable c
	//illigal multiplication between type c and 5
	c = new int[1+5*c+6];
	//undefined method bar
	(new A()).bar(car(a,cars(c),d,12),b);
	//undefined method bar
	(new A()).bar(car(a,cars(c)),b);
    }

    int[] foo(){
    	a[3]=4;
    	return a;
    }

    int bruce(boolean boo){
        return 3;
    }
    void main() {
	//argument types do not match parameter type
	bruce(3);
	a[3] = 5;
	//x has not been declared
	//cannot assgin int[] to type Object
        x = a[3];
	foo();
	//y has not be declared
	//x has not been declared
	//incorrect number of arguments passed in to foo
        foo(x,y);

	//method b is not defined 
	//variable length has not been declared
        var y = a.b().length;
	//type ban does not exist
        var z = new ban();
	//method get, bar are not declared
	//illigal addition between a and b
	//cannot cast on a variable of primitive type int
        cast(int,a+b.foo().get().bar(ab));
	//wrong type of return value
        return 6;
    }
}

//cyclic inheritance
class A extends C{
    void main(){

    }
}

class C extends A{
    void main(){

    }
}